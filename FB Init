from datetime import date, timedelta
import logging
import os
import json

import azure.functions as func
from azure.identity import DefaultAzureCredential
from azure.keyvault.secrets import SecretClient

from.fb_class import fbConnectorForAzure


KVUri = os.environ["KVUri"]
credential = DefaultAzureCredential()
client = SecretClient(vault_url=KVUri, credential=credential)

ad_account_secret = client.get_secret("facebook_ad_account")
ad_account = ad_account_secret.value
access_token_secret = client.get_secret("facebook_access_token")
access__token = access_token_secret.value
app_id_secret = client.get_secret("facebook_app_id")
app_id = app_id_secret.value
app_secret_secret = client.get_secret("facebook_app_secret")
app_secret = app_secret_secret.value

blob_account_name_secret = client.get_secret("blob_account_name")
blob_account_name = blob_account_name_secret.value
blob_container_name_secret = client.get_secret("blob_container_name")
blob_container_name = blob_container_name_secret.value
blob_access_key_secret = client.get_secret("blob_access_key")
blob_access_key = blob_access_key_secret.value

dates_to_query = [date.today()-timedelta(days=2),
                  date.today()-timedelta(days=1)]


def main(req: func.HttpRequest) -> func.HttpResponse:
    for date in dates_to_query:
        fb = fbConnectorForAzure(date,ad_account,access__token,app_id,app_secret,blob_account_name,blob_container_name,blob_access_key)
        fb.run()
    
    return func.HttpResponse(json.dumps({"Response":"function ran successfully"}))
